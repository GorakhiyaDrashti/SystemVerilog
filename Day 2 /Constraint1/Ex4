//2. Create a class for a password with fields length and password. Write constraints to ensure:
//length is between 8 and 16 characters.
//password contains at least one uppercase letter, one lowercase letter, one digit, and one special character.\



// Code your testbench here
// or browse Examples
module top;
 
  class A;
    rand bit [7:0] pw[];
    constraint inside0_10 {
      length inside {[8:16]};
    }
    constraint uniq { 
      //foreach (pw[i]) {
        pw.sum() with (7'(item inside {[97:122]}))==1; //a-z
        pw.sum() with (7'(item inside {[65:90]}))==1;  //A-Z
        pw.sum() with (7'(item inside {[33:46]}))==1;  //special char
        pw.sum() with (7'(item inside {[48:57]}))==7;  //0-9
      //}    
    }
    
  endclass
 

  A a=new;
  initial begin
    repeat(10) begin
      assert(a.randomize());
      foreach(a.pw[i]) $write("%s",a.pw[i]);
     $display("");
    end
  end
 
endmodule
