/* Write a constraint such that when rand bit[3:0] a is randomized,the value of “a” should not be same as 5 previous occurrences of the 
value of “a”.*/

class SVA;
  
  rand bit [3:0]a;
  bit [3:0]que[$];
  constraint c1{
    
    foreach(que[i])
      a != que[i];
  }
  
  
function void gen();
  if(!this.randomize())
    $display("randomization failed");
  else
    if(que.size()>4) 
      que.pop_front();
    que.push_back(a);
  
   
endfunction
  
endclass


module tb;
  SVA s;
  
  initial begin
    s = new();
    for(int i=0;i<10;i++) begin
      s.gen();
      $display("a: %0b,que: %0p",s.a,s.que);
 
    end
  end
endmodule
    
